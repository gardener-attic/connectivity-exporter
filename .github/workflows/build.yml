name: Compilation
on:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write

    steps:

    - name: Set up Go 1.16
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
      id: go

    - name: Check out code
      uses: actions/checkout@v2

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Cache deb packages
      uses: actions/cache@v2
      id: cache-debs
      with:
          path: "~/cache-debs"
          key: cache-debs-libbpf-1:0.4.0-1ubuntu1

    - name: Install deb packages
      env:
        CACHE_HIT: ${{steps.cache-debs.outputs.cache-hit}}
        LIBBPF_VERSION: "1:0.4.0-1ubuntu1"
      run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/cache-debs/* /
          else
            sudo apt install -y software-properties-common
            sudo add-apt-repository -y ppa:tuxinvader/kernel-build-tools
            sudo apt-get update
            sudo apt install -y libbpf-dev="$LIBBPF_VERSION"
            mkdir -p ~/cache-debs
            sudo dpkg -L libbpf-dev | \
                while IFS= read -r f; do \
                    if test -f $f; then echo $f; fi; \
                done | xargs cp --parents --target-directory ~/cache-debs/
          fi

    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-single-buildx-${{ hashFiles('**/*Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-single-buildx

    - name: Login to Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build
      uses: docker/build-push-action@v2
      with:
        context: connectivity-exporter/base-image
        file: connectivity-exporter/base-image/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
    - name: Move Docker layers cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Format Go code
      run: |
          OUTPUT=$(gofmt -l ./connectivity-exporter)
          if [ -n "$OUTPUT" ]; then
            echo "Please format the following files using gofmt"
            echo "${OUTPUT}"
            exit 1
          fi

    - name: Build
      run: |
        make -C connectivity-exporter

    - name: Test
      run: |
        make -C connectivity-exporter test

    #- name: Setup Minikube
    #  uses: manusa/actions-setup-minikube@v2.4.2
    #  with:
    #    minikube version: 'v1.9.2'
    #    kubernetes version: 'v1.18.2'
    #    github token: ${{ secrets.GITHUB_TOKEN }}
